# -*- coding: utf-8 -*-
"""polar scatterplot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ipM_SIFz3wfs4EmwMtOlfBSMQ9RDRy5p
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Step 1: Load and prepare your data
# Assuming your CSV is saved as 'raw_data.csv'
df = pd.read_csv('/content/raw data.csv')

# Step 2: Convert aspect from degrees to radians (required for polar plots)
# Matplotlib polar plots expect angles in radians
aspects_rad = np.radians(df['Aspect'])

# Step 3: Create the polar plot
fig, ax = plt.subplots(figsize=(10, 10), subplot_kw=dict(projection='polar'))

# Step 4: Plot each tree species as a separate series
# Each species will have a different color and marker

# Plot Fir trees
ax.scatter(aspects_rad, df['# Douglas fir'],
          c='green', s=60, alpha=0.7, label='Douglas fir', marker='o')

# Plot Pine trees
ax.scatter(aspects_rad, df['# Ponderosa pine'],
          c='blue', s=60, alpha=0.7, label='Ponderosa pine', marker='o')

# Plot Juniper trees
#ax.scatter(aspects_rad, df['# Juniper'],
  #          c='yellow', s=60, alpha=0.7, label='Juniper', marker='o')

# Plot Maple trees
#ax.scatter(aspects_rad, df['# Maple'],
 #         c='green', s=60, alpha=0.7, label='Maple', marker='o')

# Plot Wax Currant
#ax.scatter(aspects_rad, df['# Wax Currant'],
 #         c='blue', s=60, alpha=0.7, label='Wax Currant', marker='o')

# Step 5: Customize the plot
# Set the angle direction (0Â° at top, clockwise)
ax.set_theta_zero_location('N')  # North at top
ax.set_theta_direction(-1)       # Clockwise

# Set angle labels to compass directions
ax.set_thetagrids(np.arange(0, 360, 45),
                 ['0', '45', '90', '135', '180', '225', '270', '315'])

# Set radial axis label
ax.set_ylabel('Number of Trees', labelpad=40)

# Add title
ax.set_title('Tree Species Distribution by Aspect\n(Polar Scatter Plot)',
            pad=20, fontsize=14)

# Add legend
ax.legend(loc='upper left', bbox_to_anchor=(1.1, 1))

# Step 6: Optional - Add zone labels
# You can add text labels for each point if desired
#for i, zone in enumerate(df['Zone ID']):
 #   ax.annotate(zone, (aspects_rad[i], df['Total # Trees'][i]),
 #              xytext=(5, 5), textcoords='offset points',
 #              fontsize=8, alpha=0.6)

# Step 7: Show the plot
plt.tight_layout()
plt.show()